
package com.docusign.model;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.7-b01-
 * Generated source version: 2.1
 */
@WebServiceClient(name = "APIService", targetNamespace = "http://www.docusign.net/API/3.0", wsdlLocation = "file:/Users/pedro.barroso/dev/ds-service/src/main/resources/wsdl/dsapi.wsdl")
public class APIService
        extends Service {

    private final static URL APISERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(com.docusign.model.APIService.class.getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = com.docusign.model.APIService.class.getResource(".");
            url = new URL(baseUrl, "file:/Users/pedro.barroso/dev/ds-service/src/main/resources/wsdl/dsapi.wsdl");
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: 'file:/Users/pedro.barroso/dev/ds-service/src/main/resources/wsdl/dsapi.wsdl', retrying as a local file");
            logger.warning(e.getMessage());
        }
        APISERVICE_WSDL_LOCATION = url;
    }

    public APIService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public APIService() {
        super(APISERVICE_WSDL_LOCATION, new QName("http://www.docusign.net/API/3.0", "APIService"));
    }

    /**
     * @return returns APIServiceSoap
     */
    @WebEndpoint(name = "APIServiceSoap")
    public APIServiceSoap getAPIServiceSoap() {
        return super.getPort(new QName("http://www.docusign.net/API/3.0", "APIServiceSoap"), APIServiceSoap.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns APIServiceSoap
     */
    @WebEndpoint(name = "APIServiceSoap")
    public APIServiceSoap getAPIServiceSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.docusign.net/API/3.0", "APIServiceSoap"), APIServiceSoap.class, features);
    }

}
